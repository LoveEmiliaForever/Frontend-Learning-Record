//在JS中，页面中事件处理程序的数量与页面整体性能直接相关

//使用 事件委托 可以减少事件处理程序数量
//事件委托利用事件冒泡，可以只使用一个事件处理程序来管理一种类型的事件
//使用事件委托，只要给所有元素共同的祖先节点添加一个事件处理程序就可以解决问题

//还应该即使删除不用的事件处理程序
//删除带有事件处理的元素，或是使用innerHTML替换页面的某部分，都会导致内存泄露（如果没有手动删除事件处理程序）
//应该在删除元素之前，删除它们的事件处理程序

//页面卸载的残留也会导致性能问题
//如果在页面卸载后事件处理程序没有被清理，则它们任然会残留在内存中
//最好在onunload事件处理程序中删除所有事件处理程序



//事件模拟
//可以通过JS在任何时间触发任何事件，这些事件会被当成浏览器创建的事件
//这种能力在测试Web应用时特别有用（详见书P543）
